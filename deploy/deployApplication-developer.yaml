apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: developer
  name: docker-example
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-docker-example
  strategy:
    type: RollingUpdate    
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-docker-example
    spec:
      containers:
      - image: 859821442994.dkr.ecr.us-east-1.amazonaws.com/docker-example:developer 
        imagePullPolicy: Always
        name: app-docker-example
        ports:
        - containerPort: 80
---              
apiVersion: v1
kind: Service
metadata:
  namespace: developer
  name: service-lamconnect
spec:
  ports:
    - name: http
      protocol: TCP
      port: 443
      targetPort: 80
  type: NodePort
  selector:
    app.kubernetes.io/name: app-docker-example 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-docker-example
  namespace: developer
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:859821442994:certificate/3f8eb642-6713-46f5-bbb2-6cb95d8b9c73
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-docker-example
            port:
              number: 443